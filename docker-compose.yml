services:
  db:
    image: pgvector/pgvector:pg16 # Use a specific version
    container_name: ragstar_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ragstar}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password} # Change this in production!
    ports:
      - "${POSTGRES_PORT:-5432}:5432" # Expose DB port to host if needed
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-ragstar}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ragstar_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  localstack:
    image: localstack/localstack:latest
    container_name: ragstar_localstack
    ports:
      - "4566:4566" # LocalStack main port
    environment:
      - SERVICES=ssm # Only enable Systems Manager (Parameter Store)
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_HOST=localstack
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./.localstack_data:/var/lib/localstack"
    restart: unless-stopped

  backend-django:
    image: ragstar/backend_django
    build:
      context: ./backend_django
      dockerfile: Dockerfile
    container_name: ragstar_django
    ports:
      - "8000:8000" # Standardized port
    volumes:
      - ./backend_django:/app # Mount local code for development
    env_file:
      - .env
    environment:
      # Use DATABASE_URL if provided, otherwise construct from PostgreSQL variables
      - DATABASE_URL=${DATABASE_URL:-postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-ragstar}}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - LOCALSTACK_HOST=localstack
      - AUTHORIZATION_BASE_URL=${AUTHORIZATION_BASE_URL:-http://localhost:8080}
    depends_on:
      db:
        condition: service_healthy # Wait for DB to be ready
      redis:
        condition: service_started
      localstack:
        condition: service_started
    restart: unless-stopped

  celery-worker:
    image: ragstar/celery_worker
    build:
      context: ./backend_django
      dockerfile: Dockerfile
    container_name: ragstar_celery_worker
    command: >
      sh -c "
        uv run celery -A ragstar worker -l info
      "
    volumes:
      - ./backend_django:/app # Mount local code for development
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-ragstar}}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - LOCALSTACK_HOST=localstack
    depends_on:
      - backend-django
      - redis
      - localstack
    restart: unless-stopped

  flower:
    image: ragstar/flower
    build:
      context: ./backend_django
      dockerfile: Dockerfile
    container_name: ragstar_flower
    command: >
      sh -c "
        uv run celery -A ragstar flower --address=0.0.0.0 --port=5555
      "
    ports:
      - "5555:5555"
    volumes:
      - ./backend_django:/app # Mount local code for development
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-ragstar}}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - LOCALSTACK_HOST=localstack
    depends_on:
      - backend-django
      - redis
      - celery-worker
    restart: unless-stopped

  frontend-nextjs:
    image: ragstar/frontend_nextjs
    build:
      context: ./frontend_nextjs
      dockerfile: Dockerfile
      target: development
    container_name: ragstar_frontend
    ports:
      - "3000:3000" # Standardized port
    volumes:
      - ./frontend_nextjs:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - INTERNAL_API_URL=http://backend-django:8000
    depends_on:
      - backend-django
    restart: unless-stopped

  mcp-server:
    image: ragstar/mcp_server
    build:
      context: ./mcp_server
      dockerfile: Dockerfile
    container_name: ragstar_mcp
    ports:
      - "8080:8080"
    volumes:
      - ./mcp_server:/app
      - /app/.venv # Exclude the virtual environment from volume mount
    env_file:
      - .env
    environment:
      - DJANGO_BACKEND_URL=http://backend-django:8000
      - SECRET_KEY=${SECRET_KEY}
      - AUTHORIZATION_BASE_URL=${AUTHORIZATION_BASE_URL}
    depends_on:
      backend-django:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
